name: cryptoflow CI/CD

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Install deps
        run: go mod download
      - name: Run tests
        run: go test -v ./...
      - name: Build binary
        run: go build -o cryptoflow .

  smoke-ssh:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: SSH reachability check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            whoami
            hostname
            uname -a
            echo "ok: ssh works"

  deploy-ec2:
    runs-on: ubuntu-latest
    needs: [test-build, smoke-ssh]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          # pass app secrets if you need them on the remote shell
          envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION,S3_BUCKET
          script: |
            set -e
            cd /home/${{ secrets.EC2_USER }}/cryptoflow

            # first-time clone if directory isn't a git repo
            if [ ! -d .git ]; then
              git clone git@github.com:<owner>/<repo>.git . || git clone https://github.com/<owner>/<repo>.git .
            fi
            git pull --rebase

            # run your stack (compose v2 preferred)
            if command -v docker compose >/dev/null 2>&1; then
              docker compose down || true
              docker compose up -d --build
            else
              docker-compose down || true
              docker-compose up -d --build
            fi
